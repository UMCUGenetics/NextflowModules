/*
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    UMCUGenetics/DxNextflowRNA Nextflow config file
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
*/

manifest {
    name            = 'UMCUGenetics/DxNextflowRNA'
    author          = """UMCU Genetics"""
    homePage        = 'https://github.com/UMCUGenetics/DxNextflowRNA'
    description     = """UMCU Genetics RNA Workflow"""
    mainScript      = 'main.nf'
    nextflowVersion = '!>=23.04.0'
    version         = '1.0dev'
    doi             = ''
}

// Nextflow plugins
plugins {
    id 'nf-validation' // Validation of pipeline parameters and creation of an input channel from a sample sheet
}

// Global default params, used in configs
params {
    genome = '/hpc/diaggen/data/databases/ref_genomes/Homo_sapiens.GRCh37.GATK.illumina/Homo_sapiens.GRCh37.GATK.illumina.fasta'
    star_index = '/hpc/diaggen/data/databases/STAR_ref_genome_index/GCA_000001405.15_GRCh38_no_alt_plus_hs38d1_analysis_set_2.7.9a'
    gtf = '/hpc/diaggen/data/databases/gencode/gencode.v44.primary_assembly.basic.annotation.gtf'

    // Input options
    input = null

    // Output options
    outdir = null
    publish_dir_mode = 'link'
    email = null

    // cluster_options = "--mail-user $params.email --mail-type FAIL --account=diaggen"
}

// Capture exit codes from upstream processes when piping
process.shell = ['/bin/bash', '-euo', 'pipefail']

// Load base.config
includeConfig 'conf/base.config'

// Load modules.config for module specific options
includeConfig 'conf/modules.config'

report {
    enabled = true
    file = "$params.outdir/log/nextflow_report.html"
    overwrite = true
}

trace {
    enabled = true
    file = "$params.outdir/log/nextflow_trace.txt"
    overwrite = true
}

timeline {
    enabled = true
    file = "$params.outdir/log/nextflow_timeline.html"
    overwrite = true
}

profiles {

    slurm {
        process {
            executor = 'slurm'
            queue = 'cpu'

            errorStrategy = 'retry'
            maxRetries = 1
        }

        singularity {
            enabled = true
            runOptions = '-B /hpc:/hpc -B $TMPDIR:$TMPDIR'
            autoMounts = true
            cacheDir = '/hpc/diaggen/software/singularity_cache'
        }

        executor {
            queueSize = 1000
            pollInterval = '1min'
            queueStatInterval = '5min'
            submitRatelimit = '10sec'
        }

       mail {
            smtp.host = 'localhost'
        }
    }

    mac {
        docker.enabled = true
        docker.runOptions = '-v /Users:/Users'
    }
}